const express = require("express");
const router = express.Router();

const adamData = require("../data/players/adam.json");
const alanData = require("../data/players/alan.json");
const albertoData = require("../data/players/alberto.json");
const andrewdData = require("../data/players/andrewd.json");
const chrisaData = require("../data/players/chrisa.json");
const claytonData = require("../data/players/clayton.json");
const evansData = require("../data/players/evans.json");
const jacobData = require("../data/players/jacob.json");
const johnData = require("../data/players/johnk.json");
const juwanData = require("../data/players/juwan.json");
const lucaData = require("../data/players/luca.json");
const mattData = require("../data/players/matt.json");
const nickdData = require("../data/players/nickd.json");
const simonData = require("../data/players/simon.json");
const sonnyData = require("../data/players/sonny.json");
const stephenData = require("../data/players/stephen.json");
const toddData = require("../data/players/todd.json");
const tonyData = require("../data/players/tony.json");
const walskiData = require("../data/players/walski.json");
const zaneData = require("../data/players/zane.json");
const davidoData = require("../data/players/davido.json");
const ericData = require("../data/players/eric.json");
const kevinData = require("../data/players/kevins.json");
const noahData = require("../data/players/noah.json");
const travisData = require("../data/players/travis.json");
const luisData = require("../data/players/luis.json");
const marcoData = require("../data/players/marco.json");
const collinData = require("../data/players/collin.json");
const lukeData = require("../data/players/luke.json");

router.get("/adam", (req, res) => {
  res.render("players/adam", {
    title: "Adam",
    id: req.params.id,
    imagePath: "/images/profile/adamprofile.jpg",
    planeswalkerPath: "/images/planeswalker/guildmage.jpg",
    tableData: adamData.tableData,
    formatData: adamData.formatData,
    seasons: adamData.seasons,
    matchups: adamData.matchups,
  });
});

router.get("/alan", (req, res) => {
  res.render("players/alan", {
    title: "Alan",
    id: req.params.id,
    imagePath: "/images/profile/alanprofile.jpg",
    planeswalkerPath: "/images/planeswalker/guildmage.jpg",
    tableData: alanData.tableData,
    formatData: alanData.formatData,
    seasons: alanData.seasons,
    matchups: alanData.matchups,
  });
});

router.get("/alberto", (req, res) => {
  res.render("players/alberto", {
    title: "Alberto",
    id: req.params.id,
    imagePath: "/images/profile/albertoprofile.jpg",
    planeswalkerPath: "/images/planeswalker/adept.jpg",
    tableData: albertoData.tableData,
    formatData: albertoData.formatData,
    seasons: albertoData.seasons,
    matchups: albertoData.matchups,
  });
});

router.get("/andrewd", (req, res) => {
  res.render("players/andrewd", {
    title: "Andrew D",
    id: req.params.id,
    imagePath: "/images/profile/andrewdprofile.jpg",
    planeswalkerPath: "/images/planeswalker/taskmage.jpg",
    tableData: andrewdData.tableData,
    formatData: andrewdData.formatData,
    seasons: andrewdData.seasons,
    matchups: andrewdData.matchups,
  });
});

router.get("/chrisa", (req, res) => {
  res.render("players/chrisa", {
    title: "Chris A",
    id: req.params.id,
    imagePath: "/images/profile/chrisaprofile.jpg",
    planeswalkerPath: "/images/planeswalker/sorcerer.jpg",
    tableData: chrisaData.tableData,
    formatData: chrisaData.formatData,
    seasons: chrisaData.seasons,
    matchups: chrisaData.matchups,
  });
});

router.get("/clayton", (req, res) => {
  res.render("players/clayton", {
    title: "Clayton",
    id: req.params.id,
    imagePath: "/images/profile/claytonprofile2.jpg",
    planeswalkerPath: "/images/planeswalker/spellshaper.jpg",
    tableData: claytonData.tableData,
    formatData: claytonData.formatData,
    seasons: claytonData.seasons,
    matchups: claytonData.matchups,
  });
});

router.get("/evans", (req, res) => {
  res.render("players/evans", {
    title: "Evan S",
    id: req.params.id,
    imagePath: "/images/profile/evansprofile.jpg",
    planeswalkerPath: "/images/planeswalker/spellshaper.jpg",
    tableData: evansData.tableData,
    formatData: evansData.formatData,
    seasons: evansData.seasons,
    matchups: evansData.matchups,
  });
});

router.get("/jacob", (req, res) => {
  res.render("players/jacob", {
    title: "Jacob",
    id: req.params.id,
    imagePath: "/images/profile/jacobprofile.jpg",
    planeswalkerPath: "/images/planeswalker/spellshaper.jpg",
    tableData: jacobData.tableData,
    formatData: jacobData.formatData,
    seasons: jacobData.seasons,
    matchups: jacobData.matchups,
  });
});

router.get("/johnk", (req, res) => {
  res.render("players/johnk", {
    title: "John K",
    id: req.params.id,
    imagePath: "/images/profile/johnkprofile.jpg",
    planeswalkerPath: "/images/planeswalker/spellshaper.jpg",
    tableData: johnData.tableData,
    formatData: johnData.formatData,
    seasons: johnData.seasons,
    matchups: johnData.matchups,
  });
});

router.get("/juwan", (req, res) => {
  res.render("players/juwan", {
    title: "Juwan",
    id: req.params.id,
    imagePath: "/images/profile/juwanprofile.jpg",
    planeswalkerPath: "/images/planeswalker/spellshaper.jpg",
    tableData: juwanData.tableData,
    formatData: juwanData.formatData,
    seasons: juwanData.seasons,
    matchups: juwanData.matchups,
  });
});

router.get("/luca", (req, res) => {
  res.render("players/luca", {
    title: "Luca",
    id: req.params.id,
    imagePath: "/images/profile/lucaprofile.jpg",
    planeswalkerPath: "/images/planeswalker/prodigy.jpg",
    tableData: lucaData.tableData,
    formatData: lucaData.formatData,
    seasons: lucaData.seasons,
    matchups: lucaData.matchups,
  });
});

router.get("/matty", (req, res) => {
  res.render("players/matty", {
    title: "Matt Y",
    id: req.params.id,
    imagePath: "/images/profile/mattprofile.jpg",
    planeswalkerPath: "/images/planeswalker/invoker.jpg",
    tableData: mattData.tableData,
    formatData: mattData.formatData,
    seasons: mattData.seasons,
    matchups: mattData.matchups,
  });
});

router.get("/nickd", (req, res) => {
  res.render("players/nickd", {
    title: "Nick D",
    id: req.params.id,
    imagePath: "/images/profile/nickdprofile.jpg",
    planeswalkerPath: "/images/planeswalker/invoker.jpg",
    tableData: nickdData.tableData,
    formatData: nickdData.formatData,
    seasons: nickdData.seasons,
    matchups: nickdData.matchups,
  });
});

router.get("/simon", (req, res) => {
  res.render("players/simon", {
    title: "Gremlin",
    id: req.params.id,
    imagePath: "/images/profile/simonprofile.jpg",
    planeswalkerPath: "/images/planeswalker/guildmage.jpg",
    tableData: simonData.tableData,
    formatData: simonData.formatData,
    seasons: simonData.seasons,
    matchups: simonData.matchups,
  });
});

router.get("/sonny", (req, res) => {
  res.render("players/sonny", {
    title: "Sonny",
    id: req.params.id,
    imagePath: "/images/profile/sonnyprofile.jpg",
    planeswalkerPath: "/images/planeswalker/spellshaper.jpg",
    tableData: sonnyData.tableData,
    formatData: sonnyData.formatData,
    seasons: sonnyData.seasons,
    matchups: sonnyData.matchups,
  });
});

router.get("/stephen", (req, res) => {
  res.render("players/stephen", {
    title: "Stephen",
    id: req.params.id,
    imagePath: "/images/profile/stephenprofile.jpg",
    planeswalkerPath: "/images/planeswalker/adept.jpg",
    tableData: stephenData.tableData,
    formatData: stephenData.formatData,
    seasons: stephenData.seasons,
    matchups: stephenData.matchups,
  });
});

router.get("/todd", (req, res) => {
  res.render("players/todd", {
    title: "Todd",
    id: req.params.id,
    imagePath: "/images/profile/toddprofile.jpg",
    planeswalkerPath: "/images/planeswalker/apprentice.jpg",
    tableData: toddData.tableData,
    formatData: toddData.formatData,
    seasons: toddData.seasons,
    matchups: toddData.matchups,
  });
});

router.get("/tony", (req, res) => {
  res.render("players/tony", {
    title: "Tony",
    id: req.params.id,
    imagePath: "/images/profile/tonyprofile.jpg",
    planeswalkerPath: "/images/planeswalker/invoker.jpg",
    tableData: tonyData.tableData,
    formatData: tonyData.formatData,
    seasons: tonyData.seasons,
    matchups: tonyData.matchups,
  });
});

router.get("/walski", (req, res) => {
  res.render("players/walski", {
    title: "Walski",
    id: req.params.id,
    imagePath: "/images/profile/walskiprofile.jpg",
    planeswalkerPath: "/images/planeswalker/guildmage.jpg",
    tableData: walskiData.tableData,
    formatData: walskiData.formatData,
    seasons: walskiData.seasons,
    matchups: walskiData.matchups,
  });
});

router.get("/zane", (req, res) => {
  res.render("players/zane", {
    title: "Zane",
    id: req.params.id,
    imagePath: "/images/profile/zaneprofile.jpg",
    planeswalkerPath: "/images/planeswalker/taskmage.jpg",
    tableData: zaneData.tableData,
    formatData: zaneData.formatData,
    seasons: zaneData.seasons,
    matchups: zaneData.matchups,
  });
});

router.get("/davido", (req, res) => {
  res.render("players/davido", {
    title: "David O",
    id: req.params.id,
    imagePath: "/images/profile/davidprofile.jpg",
    planeswalkerPath: "/images/planeswalker/taskmage.jpg",
    tableData: davidoData.tableData,
    formatData: davidoData.formatData,
    seasons: davidoData.seasons,
    matchups: davidoData.matchups,
  });
});

router.get("/erick", (req, res) => {
  res.render("players/eric", {
    title: "Eric K",
    id: req.params.id,
    imagePath: "/images/profile/ericprofile.jpg",
    planeswalkerPath: "/images/planeswalker/adept.jpg",
    tableData: ericData.tableData,
    formatData: ericData.formatData,
    seasons: ericData.seasons,
    matchups: ericData.matchups,
  });
});

router.get("/kevin", (req, res) => {
  res.render("players/kevins", {
    title: "Kevin S",
    id: req.params.id,
    imagePath: "/images/profile/kevinprofile.jpg",
    planeswalkerPath: "/images/planeswalker/apprentice.jpg",
    tableData: kevinData.tableData,
    formatData: kevinData.formatData,
    seasons: kevinData.seasons,
    matchups: kevinData.matchups,
  });
});

router.get("/noah", (req, res) => {
  res.render("players/noah", {
    title: "Noah",
    id: req.params.id,
    imagePath: "/images/profile/noahprofile.jpg",
    planeswalkerPath: "/images/planeswalker/adept.jpg",
    tableData: noahData.tableData,
    formatData: noahData.formatData,
    seasons: noahData.seasons,
    matchups: noahData.matchups,
  });
});

router.get("/travis", (req, res) => {
  res.render("players/travis", {
    title: "Travis",
    id: req.params.id,
    imagePath: "/images/profile/travisprofile.jpg",
    planeswalkerPath: "/images/planeswalker/novice.jpg",
    tableData: travisData.tableData,
    formatData: travisData.formatData,
    seasons: travisData.seasons,
    matchups: travisData.matchups,
  });
});

router.get("/luis", (req, res) => {
  res.render("players/luis", {
    title: "Luis",
    id: req.params.id,
    imagePath: "/images/profile/luisprofile.jpg",
    planeswalkerPath: "/images/planeswalker/apprentice.jpg",
    tableData: luisData.tableData,
    formatData: luisData.formatData,
    seasons: luisData.seasons,
    matchups: luisData.matchups,
  });
});

router.get("/marco", (req, res) => {
  res.render("players/marco", {
    title: "Marco",
    id: req.params.id,
    imagePath: "/images/profile/marcoprofile.jpg",
    planeswalkerPath: "/images/planeswalker/novice.jpg",
    tableData: marcoData.tableData,
    formatData: marcoData.formatData,
    seasons: marcoData.seasons,
    matchups: marcoData.matchups,
  });
});

router.get("/collin", (req, res) => {
  res.render("players/collin", {
    title: "Collin",
    id: req.params.id,
    imagePath: "/images/profile/collinprofile.jpg",
    planeswalkerPath: "/images/planeswalker/prodigy.jpg",
    tableData: collinData.tableData,
    formatData: collinData.formatData,
    seasons: collinData.seasons,
    matchups: collinData.matchups,
  });
});

router.get("/luke", (req, res) => {
  res.render("players/luke", {
    title: "Luke",
    id: req.params.id,
    imagePath: "/images/profile/lukeprofile.jpg",
    planeswalkerPath: "/images/planeswalker/novice.jpg",
    tableData: lukeData.tableData,
    formatData: lukeData.formatData,
    seasons: lukeData.seasons,
    matchups: lukeData.matchups,
  });
});


router.get("/invalidplayer", (req, res) => {
  res.render("players/invalidplayer", {
    title: "Invalid Player",
    id: req.params.id,
  });
});

module.exports = router;
